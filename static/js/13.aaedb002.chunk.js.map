{"version":3,"file":"static/js/13.aaedb002.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","redux/filter/selector.js","redux/contact/selector.js","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactListBtn\":\"ContactList_contactListBtn__iwQAv\"};","export const selectFilter = state => state.filter;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoader = state => state.contacts.isLoader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/filter/selector';\nimport { selectContacts } from '../../redux/contact/selector';\nimport { deleteContact } from '../../redux/operations';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n\n  const normalizeFilter = filter.toLowerCase();\n  const filteredContatcs = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter)\n  );\n\n  return (\n    <ul className={css.contactList}>\n      {filteredContatcs.map(({ id, name, number }) => (\n        <li key={id} className={css.contactItem}>\n          {name}: {number}\n          <button\n            className={css.contactListBtn}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n      {filteredContatcs.length === 0 && (\n        <p>The Phonebook is empty. Add your first contact. 🫤 </p>\n      )}\n    </ul>\n  );\n};\nexport default ContactList;\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"formLabel\":\"Form_formLabel__alHO0\",\"formInput\":\"Form_formInput__sgOCo\",\"addContactBtn\":\"Form_addContactBtn__ADaR4\"};","import { nanoid } from 'nanoid';\nimport { Notify } from 'notiflix';\nimport css from './Form.module.css';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contact/selector';\nimport { addContact } from '../../redux/operations';\nconst Form = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [contactName, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.some(({ name }) => name === contactName)) {\n      Notify.failure(`${contactName} is already in your contacts`);\n\n      return;\n    }\n    dispatch(\n      addContact({\n        name: contactName,\n        number,\n        id: nanoid(),\n      })\n    );\n    setName('');\n    setNumber('');\n  };\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formLabel} htmlFor={nameInputId}>\n        Name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          value={contactName}\n          onChange={handleChange}\n          id={nameInputId}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.formLabel} htmlFor={numberInputId}>\n        Number\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          id={numberInputId}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.addContactBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactLabel\":\"Filter_contactLabel__TqLYf\",\"contactInput\":\"Filter_contactInput__YRet6\"};","import React from 'react';\n// import PropTypes from 'prop-types';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/filter/selector';\nimport { setFilter } from '../../redux/filter/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const onChangeFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n  return (\n    <div className={css.contactLabel}>\n      <label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          name={filter}\n          placeholder=\"Enter phone number to find\"\n          onChange={onChangeFilter}\n          className={css.contactInput}\n        />\n      </label>\n    </div>\n  );\n};\nexport default Filter;\n","import ContactList from '../../src/components/ContactList/ContactList';\nimport Form from '../../src/components/Form/Form';\nimport Filter from '../../src/components/Filter/Filter';\nimport { fetchContacts } from '../redux/operations';\nimport { selectError, selectIsLoader } from '../redux/contact/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoader);\n  const error = useSelector(selectError);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <Form />\n      <Filter />\n      <title>Contacts</title>\n      {isLoading && !error && <b>Loading...</b>}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectError","error","selectIsLoader","isLoader","dispatch","useDispatch","useSelector","normalizeFilter","toLowerCase","filteredContatcs","name","includes","className","css","map","id","number","type","onClick","deleteContact","length","useState","contactName","setName","setNumber","nameInputId","nanoid","numberInputId","handleChange","e","currentTarget","value","onSubmit","preventDefault","some","Notify","addContact","htmlFor","onChange","pattern","title","required","placeholder","setFilter","target","Contacts","isLoading","useEffect","fetchContacts"],"sourceRoot":""}